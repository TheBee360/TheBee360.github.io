{"version":3,"file":"static/js/135.384267cb.chunk.js","mappings":"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","sources":["components/experiences/ExperienceSingle.jsx","components/experiences/ExperiencesGrid.jsx","data/experiences.js","context/ExperiencesContext.jsx","pages/Experiences.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\n\nconst ExperienceSingle = ({ title, category, image }) => {\n\treturn (\n\t\t<motion.div\n\t\t\tinitial={{ opacity: 0 }}\n\t\t\tanimate={{ opacity: 1, delay: 1 }}\n\t\t\ttransition={{\n\t\t\t\tease: 'easeInOut',\n\t\t\t\tduration: 0.7,\n\t\t\t\tdelay: 0.15,\n\t\t\t}}\n\t\t>\n\t\t\t<Link to={`/experiences/single-experience/${title}`} aria-label={title}>\n\t\t\t\t<div className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\tclassName=\"object-cover h-48 w-96 rounded-t-xl border-none\"\n\t\t\t\t\t\t\talt=\"Single Experience\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center px-4 py-6\">\n\t\t\t\t\t\t<p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\n\t\t\t\t\t\t\t{category}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t</motion.div>\n\t);\n};\n\nexport default ExperienceSingle;\n","import { useContext } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport ExperienceSingle from './ExperienceSingle';\nimport { ExperiencesContext } from '../../context/ExperiencesContext';\nimport ExperiencesFilter from './ExperiencesFilter';\n\nconst ExperiencesGrid = () => {\n\tconst {\n\t\tExperiences,\n\t\tsearchExperience,\n\t\tsetSearchExperience,\n\t\tsearchExperiencesByTitle,\n\t\tselectExperience,\n\t\tsetSelectExperience,\n\t\tselectExperiencesByCategory,\n\t} = useContext(ExperiencesContext);\n\n\treturn (\n\t\t<section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\n\t\t\t\t\tExperience\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<br />\n\n\t\t\t{/*\n\t\t\tUncomment if you want search for experience\n\n\t\t\t<div className=\"mt-10 sm:mt-16\">\n\t\t\t\t<h3\n\t\t\t\t\tclassName=\"font-general-regular \n                        text-center text-secondary-dark\n                        dark:text-ternary-light\n                        text-md\n                        sm:text-xl\n                        mb-3\n                        \"\n\t\t\t\t>\n\t\t\t\t\tSearch Experiences by title or filter by category\n\t\t\t\t</h3>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"\n                        flex\n                        justify-between\n                        border-b border-primary-light\n                        dark:border-secondary-dark\n                        pb-3\n                        gap-3\n                        \"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex justify-between gap-2\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"\n                                hidden\n                                sm:block\n                                bg-primary-light\n                                dark:bg-ternary-dark\n                                p-2.5\n                                shadow-sm\n                                rounded-xl\n                                cursor-pointer\n                                \"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetSearchExperience(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"font-general-medium \n                                pl-3\n                                pr-1\n                                sm:px-4\n                                py-2\n                                border \n                            border-gray-200\n                                dark:border-secondary-dark\n                                rounded-lg\n                                text-sm\n                                sm:text-md\n                                bg-secondary-light\n                                dark:bg-ternary-dark\n                                text-primary-dark\n                                dark:text-ternary-light\n                                \"\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\trequired=\"\"\n\t\t\t\t\t\t\tplaceholder=\"Search Experiences\"\n\t\t\t\t\t\t\taria-label=\"Name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ExperiencesFilter setSelectExperience={setSelectExperience} />\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t*/}\n\n\t\t\t<div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\n\t\t\t\t{selectExperience\n\t\t\t\t\t? selectExperiencesByCategory.map((Experience) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<ExperienceSingle\n\t\t\t\t\t\t\t\ttitle={Experience.title}\n\t\t\t\t\t\t\t\tcategory={Experience.category}\n\t\t\t\t\t\t\t\timage={Experience.img}\n\t\t\t\t\t\t\t\tkey={Experience.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t  ))\n\t\t\t\t\t: searchExperience\n\t\t\t\t\t? searchExperiencesByTitle.map((Experience) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<ExperienceSingle\n\t\t\t\t\t\t\t\ttitle={Experience.title}\n\t\t\t\t\t\t\t\tcategory={Experience.category}\n\t\t\t\t\t\t\t\timage={Experience.img}\n\t\t\t\t\t\t\t\tkey={Experience.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t  ))\n\t\t\t\t\t: Experiences.map((Experience) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<ExperienceSingle\n\t\t\t\t\t\t\t\ttitle={Experience.title}\n\t\t\t\t\t\t\t\tcategory={Experience.category}\n\t\t\t\t\t\t\t\timage={Experience.img}\n\t\t\t\t\t\t\t\tkey={Experience.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t  ))}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default ExperiencesGrid;\n","// Import images\nimport NASAImage from '../images/nasa-experience-PhotoRoom.png';\nimport AWSImage from '../images/aws-experience.jpg';\nimport AlexaImage from '../images/alexa-experience.jpg';\nimport AristaImage from '../images/arista-experience.jpg';\nimport InsaneInkImage from '../images/insaneink-experience.jpg';\n\nexport const experiencesData = [\n\t{\n\t\tid: 1,\n\t\ttitle: 'NASA Ames Research Center',\n\t\tcategory: 'Machine Learning Intern',\n\t\tdates: 'Sep 2023 - Dec 2023',\n\t\timg: NASAImage,\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: 'Alexa',\n\t\tcategory: 'Software Engineer Intern',\n\t\tdates: 'Jun 2023 - Sep 2023',\n\t\timg: AlexaImage,\n\t},\n\t{\n\t\tid: 3,\n\t\ttitle: 'Arista Networks',\n\t\tcategory: 'Software Engineer Intern',\n\t\tdates: 'Apr 2023 - Jun 2023',\n\t\timg: AristaImage,\n\t},\n\t{\n\t\tid: 4,\n\t\ttitle: 'Amazon Web Services',\n\t\tcategory: 'Software Engineer Intern',\n\t\tdates: 'Jun 2022 - Sep 2022',\n\t\timg: AWSImage,\n\t},\n\t{\n\t\tid: 5,\n\t\ttitle: 'Insane Ink',\n\t\tcategory: 'Webmaster',\n\t\tdates: 'Sep 2019 - Jun 2020',\n\t\timg: InsaneInkImage,\n\t},\n];\n","import { useState, createContext } from 'react';\nimport { experiencesData } from '../data/experiences';\n\n// Create Experiences context\nexport const ExperiencesContext = createContext();\n\n// Create the Experiences context provider\nexport const ExperiencesProvider = (props) => {\n\tconst [Experiences, setExperiences] = useState(experiencesData);\n\tconst [searchExperience, setSearchExperience] = useState('');\n\tconst [selectExperience, setSelectExperience] = useState('');\n\n\t// Search Experiences by Experience title\n\tconst searchExperiencesByTitle = Experiences.filter((item) => {\n\t\tconst result = item.title\n\t\t\t.toLowerCase()\n\t\t\t.includes(searchExperience.toLowerCase())\n\t\t\t? item\n\t\t\t: searchExperience === ''\n\t\t\t? item\n\t\t\t: '';\n\t\treturn result;\n\t});\n\n\t// Select Experiences by Experience category\n\tconst selectExperiencesByCategory = Experiences.filter((item) => {\n\t\tlet category =\n\t\t\titem.category.charAt(0).toUpperCase() + item.category.slice(1);\n\t\treturn category.includes(selectExperience);\n\t});\n\n\treturn (\n\t\t<ExperiencesContext.Provider\n\t\t\tvalue={{\n\t\t\t\tExperiences,\n\t\t\t\tsetExperiences,\n\t\t\t\tsearchExperience,\n\t\t\t\tsetSearchExperience,\n\t\t\t\tsearchExperiencesByTitle,\n\t\t\t\tselectExperience,\n\t\t\t\tsetSelectExperience,\n\t\t\t\tselectExperiencesByCategory,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</ExperiencesContext.Provider>\n\t);\n};\n","import ExperiencesGrid from '../components/experiences/ExperiencesGrid';\nimport { ExperiencesProvider } from '../context/ExperiencesContext';\n\nconst Experiences = () => {\n\treturn (\n\t\t<ExperiencesProvider>\n\t\t\t<div className=\"container mx-auto\">\n\t\t\t\t<ExperiencesGrid />\n\t\t\t</div>\n\t\t</ExperiencesProvider>\n\t);\n};\n\nexport default Experiences;\n"],"names":["_ref","title","category","image","_jsx","motion","div","initial","opacity","animate","delay","transition","ease","duration","children","Link","to","concat","_jsxs","className","src","alt","_useContext","useContext","ExperiencesContext","Experiences","searchExperience","searchExperiencesByTitle","setSearchExperience","selectExperience","selectExperiencesByCategory","setSelectExperience","map","Experience","ExperienceSingle","img","id","experiencesData","dates","NASAImage","AWSImage","createContext","ExperiencesProvider","props","_useState","useState","_useState2","_slicedToArray","setExperiences","_useState3","_useState4","_useState5","_useState6","filter","item","toLowerCase","includes","charAt","toUpperCase","slice","Provider","value","ExperiencesGrid"],"sourceRoot":""}